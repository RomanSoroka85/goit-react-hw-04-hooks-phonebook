{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/FormContact/FormContact.module.css","components/FormContact/FormContact.js","components/Filter/Filter.js","components/ContactsList/ContactListItem/ContactListItem.js","components/ContactsList/ContactsList.js","components/App/App.js","index.js","components/ContactsList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","className","s","form","preventDefault","label","input","type","pattern","onChange","title","required","button","btnText","size","color","Filter","filterLabel","filterInput","ContactListItem","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","onClick","ContactList","contacts","onDeleteContact","list","map","id","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","find","contact","alert","newContact","shortid","generate","prevContacts","target","ContactsList","toLowerCase","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a29c6f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1Tddr\",\"filterInput\":\"Filter_filterInput__3L04m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1xA2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__GCWUw\",\"label\":\"FormContact_label__2kX3X\",\"input\":\"FormContact_input__1xMwQ\",\"button\":\"FormContact_button__190VN\",\"btnText\":\"FormContact_btnText__3t_Lr\"};","import React, { useState } from \"react\";\nimport s from \"./FormContact.module.css\";\nimport PropTypes from \"prop-types\";\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        enter Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          onChange={handleChange}\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n         enter Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          onChange={handleChange}\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}>Add contact</span>\n        <AiOutlineUserAdd size=\"20px\" color=\"rgb(130, 27, 112)\" />\n      </button>\n    </form>\n  );\n}\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filterLabel}>\n    Find contacts by name\n    <input\n      className={s.filterInput}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import s from \"./ContactListItem.module.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AiOutlineUserDelete } from \"react-icons/ai\";\n\nconst ContactListItem = ({\n  contactName,\n  contactNumber,\n  onClickDeleteContact,\n}) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.listItemText}>{contactName}:</span>\n      <span className={s.listItemText}>{contactNumber}</span>\n      <button className={s.button} type=\"button\" onClick={onClickDeleteContact}>\n        Delete <AiOutlineUserDelete size=\"15px\" />\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import s from \"./ContactsList.module.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        contactName={name}\n        contactNumber={number}\n        onClickDeleteContact={() => onDeleteContact(id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport FormContact from \"../FormContact/FormContact\";\nimport Filter from \"../Filter/Filter\";\nimport ContactsList from \"../ContactsList/ContactsList\";\nimport \"./app.scss\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [];\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts((prevContacts) => [newContact, ...prevContacts]);\n  };\n  const changeFilter = ({ target }) => {\n    setFilter(target.value);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n\n      <FormContact onSubmit={addContact} />\n\n      <h2>Contants</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      ></ContactsList>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3wbVW\",\"listItemText\":\"ContactListItem_listItemText__1V2rr\",\"button\":\"ContactListItem_button__KFPhu\"};"],"sourceRoot":""}